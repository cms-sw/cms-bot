#!/bin/bash -ex
CMS_BOT_DIR=$(dirname $0)
case $CMS_BOT_DIR in /*) ;; *) CMS_BOT_DIR=$(pwd)/${CMS_BOT_DIR} ;; esac
export JENKINS_PREFIX_STR=$(echo "${JENKINS_URL}" | sed 's|jenkins/*$||;s|.*/||')
PULL_REQUEST=$1
export USER_CODE_CHECKS=$2
BUILD_NUMBER=$3
DRY_RUN=$4
REPOSITORY=$5
CODE_FORMAT=$6
CODE_CHECKS=$7
CMSSW_TOOL_CONF=$8
MULTIPLE_FILES_CHANGES=true
if [ "$DRY_RUN" != "true" ] ; then DRY_RUN=false ; fi

source ${CMS_BOT_DIR}/common/github_reports.sh
PR_COMMIT="$(wget -q -O- https://api.github.com/repos/cms-sw/cmssw/pulls/${PULL_REQUEST} | grep 'api.github.com/repos/cms-sw/cmssw/statuses/' | grep '"href"' | tail -1 | sed 's|.*/||;s|".*||')"
$DRY_RUN || mark_commit_status_pr -r "cms-sw/cmssw" -c "${PR_COMMIT}" -C "cms/code-checks" -s "pending" -u "${BUILD_URL}" -d "Running"

if [ "${CMSSW_TOOL_CONF}" != "" ] ; then
  mv $CMSSW_BASE/config/toolbox/${SCRAM_ARCH}/tools/selected $CMSSW_BASE/old-tools
  cp -r ${CMSSW_TOOL_CONF}/tools/selected $CMSSW_BASE/config/toolbox/${SCRAM_ARCH}/tools/selected
  if [ -e $CMSSW_BASE/old-tools/cmssw.xml ] ; then
    cp $CMSSW_BASE/old-tools/cmssw.xml $CMSSW_BASE/config/toolbox/${SCRAM_ARCH}/tools/selected/
  fi
  scram setup      > /dev/null 2>&1
  scram b echo_CXX > /dev/null 2>&1
  eval `scram run -sh` > /dev/null 2>&1
fi

if [ "X${REPOSITORY}" = "X" ] ; then REPOSITORY="cms-sw/cmssw" ;fi
REPO_USER=$(echo ${REPOSITORY} | sed 's|/.*||')
if [ "$BUILD_NUMBER" = "" ] ; then BUILD_NUMBER=$(date +%s); fi
NUM_PROC=$(nproc)
if [ $NUM_PROC = "0" ] ; then NUM_PROC=1; fi
cd $CMSSW_BASE
rm -rf ${CMSSW_BASE}/upload
mkdir ${CMSSW_BASE}/upload
runTheMatrix.py -n -e -i all > $CMSSW_BASE/upload/wf_orig.txt 2>&1 || true

curl -s -L https://patch-diff.githubusercontent.com/raw/${REPOSITORY}/pull/${PULL_REQUEST}.patch | grep '^diff --git ' | sed 's|.* a/||;s|  *b/.*||' | sort | uniq > $CMSSW_BASE/upload/all-changed-files.txt
grep -v '^[^/]*/[^/]*/test/' $CMSSW_BASE/upload/all-changed-files.txt > $CMSSW_BASE/upload/code-checks-files.txt          || true
grep -v '^[^/]*/[^/]*/data/' $CMSSW_BASE/upload/code-checks-files.txt > $CMSSW_BASE/upload/filename-code-checks-files.txt || true
$CMS_BOT_DIR/cms-filename-checks.py $CMSSW_BASE/upload/filename-code-checks-files.txt $CMSSW_RELEASE_BASE/src > $CMSSW_BASE/upload/invalid-filenames.txt || true
echo "Changed files:"
cat $CMSSW_BASE/upload/code-checks-files.txt
echo ""

git cms-init --upstream-only
DSIZE=0
pushd $CMSSW_BASE/src
  git checkout $(git branch  | grep -v '^[*]' | grep 'CMSSW_' | head -1)
  THRDS=""
  git repack -h 2>&1 | grep '\-\-threads' && THRDS="--threads ${NUM_PROC}" || true
  git repack -a -d ${THRDS}
  git repack -a -d ${THRDS}
  OSIZE=$(du -sk .git/objects/pack | sed 's|\s.*||')
  git cms-merge-topic -u ${REPO_USER}:${PULL_REQUEST} 2>&1 | tee $CMSSW_BASE/upload/cms-checkout-topic.log
  git repack -d ${THRDS}
  NSIZE=$(du -sk .git/objects/pack | sed 's|\s.*||')
  let DSIZE=${NSIZE}-${OSIZE} || DSIZE=0
  if [ $DSIZE -lt 0 ] ; then DSIZE=0 ; fi
  $CMS_BOT_DIR/pr-checks/check-pr-files -d -r ${REPO_USER}/cmssw ${PULL_REQUEST} > $CMSSW_BASE/upload/invalid_files.txt || true
popd

source $CMS_BOT_DIR/jenkins-artifacts

#If we have any non-tests changed files
touch ${CMSSW_BASE}/upload/code-checks.patch
if $CODE_CHECKS ; then
  if [ -s $CMSSW_BASE/upload/code-checks-files.txt ] ; then
    ERR=false
    scram build -k -j $NUM_PROC code-checks USER_CODE_CHECKS_FILE="$CMSSW_BASE/upload/code-checks-files.txt" > ${CMSSW_BASE}/upload/code-checks.log 2>&1 || ERR=true
    if $ERR ; then
      echo '-code-checks' > ${CMSSW_BASE}/upload/code-checks-err.log
      echo '' >> ${CMSSW_BASE}/upload/code-checks-err.log
      echo 'ERROR: Build errors found during clang-tidy run.' >> ${CMSSW_BASE}/upload/code-checks-err.log
      echo '```' >> ${CMSSW_BASE}/upload/code-checks-err.log
      grep -A 3 ': error: \|gmake: \*\*\*' ${CMSSW_BASE}/upload/code-checks.log | tail -24 | sed "s|$CMSSW_BASE/src/||" >> ${CMSSW_BASE}/upload/code-checks-err.log
      echo '```' >> ${CMSSW_BASE}/upload/code-checks-err.log
      if ! $DRY_RUN ; then
        send_jenkins_artifacts ${CMSSW_BASE}/upload/ pr-code-checks/${REPO_USER}-PR-${PULL_REQUEST}/${BUILD_NUMBER}
        ${CMS_BOT_DIR}/comment-gh-pr -r ${REPOSITORY} -p $PULL_REQUEST -R ${CMSSW_BASE}/upload/code-checks-err.log
      fi
      exit 0
    fi
    if [ -e ${CMSSW_BASE}/tmp/${SCRAM_ARCH}/code-checks-logs ] ; then
      mv ${CMSSW_BASE}/tmp/${SCRAM_ARCH}/code-checks-logs ${CMSSW_BASE}/upload
    fi
    pushd $CMSSW_BASE/src
      git diff > ${CMSSW_BASE}/upload/code-checks.patch
      if [ -s ${CMSSW_BASE}/upload/code-checks.patch ] ; then
        git commit -a -m 'code-checks'
      fi
    popd
  fi
fi

touch ${CMSSW_BASE}/upload/code-format.patch
if $CODE_FORMAT ; then
  if [ -f ${CMSSW_BASE}/src/.clang-format ] ; then
    cp $CMSSW_BASE/upload/all-changed-files.txt $CMSSW_BASE/upload/code-format-files.txt
    if [ -s $CMSSW_BASE/upload/code-format-files.txt ] ; then
      scram build -k -j $NUM_PROC code-format USER_CODE_FORMAT_FILE="$CMSSW_BASE/upload/code-format-files.txt" > $CMSSW_BASE/upload/code-format.log 2>&1
      pushd $CMSSW_BASE/src
        git diff > ${CMSSW_BASE}/upload/code-format.patch
        if [ -s ${CMSSW_BASE}/upload/code-format.patch ] ; then
          git commit -a -m 'code-formats'
        fi
      popd
    fi
  fi
fi

scram build -j $NUM_PROC CompilePython > ${CMSSW_BASE}/upload/scram_build.log 2>&1 || true
runTheMatrix.py -n -e -i all > ${CMSSW_BASE}/upload/wf_new.txt 2>&1 || true
$CMS_BOT_DIR/pr-checks/find-changed-workflows.py $CMSSW_BASE/upload/wf_orig.txt ${CMSSW_BASE}/upload/wf_new.txt > ${CMSSW_BASE}/upload/wf_diff.txt 2>&1 || true

if ${MULTIPLE_FILES_CHANGES} ; then
    ${CMS_BOT_DIR}/github_scripts/simultaneous_files_modifications_by_PRs.py ${PULL_REQUEST} > \
        ${CMSSW_BASE}/upload/multiple_files_changes.txt || true
fi

RES="+code-checks"
HOW_TO_RUN=""
if [ -s ${CMSSW_BASE}/upload/code-checks.patch -o -s ${CMSSW_BASE}/upload/code-format.patch ] ; then
  RES="-code-checks"
  HOW_TO_RUN="@N@@N@Code check has found code style and quality issues which could be resolved by applying following patch(s)"
  if [ -s ${CMSSW_BASE}/upload/code-checks.patch ] ; then
    HOW_TO_RUN="${HOW_TO_RUN}@N@- **code-checks**:"
    HOW_TO_RUN="${HOW_TO_RUN}@N@https://cmssdt.cern.ch/SDT/${JENKINS_PREFIX_STR}code-checks/${REPO_USER}-PR-${PULL_REQUEST}/${BUILD_NUMBER}/code-checks.patch"
    HOW_TO_RUN="${HOW_TO_RUN}@N@e.g. \`curl https://cmssdt.cern.ch/SDT/${JENKINS_PREFIX_STR}code-checks/${REPO_USER}-PR-${PULL_REQUEST}/${BUILD_NUMBER}/code-checks.patch | patch -p1\`"
    HOW_TO_RUN="${HOW_TO_RUN}@N@You can also run \`scram build code-checks\` to apply code checks directly"
  fi
  if [ -s ${CMSSW_BASE}/upload/code-format.patch ] ; then
    HOW_TO_RUN="${HOW_TO_RUN}@N@- **code-format**:"
    HOW_TO_RUN="${HOW_TO_RUN}@N@https://cmssdt.cern.ch/SDT/${JENKINS_PREFIX_STR}code-checks/${REPO_USER}-PR-${PULL_REQUEST}/${BUILD_NUMBER}/code-format.patch"
    HOW_TO_RUN="${HOW_TO_RUN}@N@e.g. \`curl https://cmssdt.cern.ch/SDT/${JENKINS_PREFIX_STR}code-checks/${REPO_USER}-PR-${PULL_REQUEST}/${BUILD_NUMBER}/code-format.patch | patch -p1\`"
    HOW_TO_RUN="${HOW_TO_RUN}@N@You can also run \`scram build code-format\` to apply code format directly"
  fi
fi
MSG="${RES}@N@@N@Logs: https://cmssdt.cern.ch/SDT/${JENKINS_PREFIX_STR}code-checks/${REPO_USER}-PR-${PULL_REQUEST}/${BUILD_NUMBER}"
if [ $DSIZE -gt 0 ] ; then MSG="${MSG}@N@@N@- This PR adds an extra ${DSIZE}KB to repository" ; fi
if [ -s ${CMSSW_BASE}/upload/invalid_files.txt ] ; then
  MSG="${MSG}@N@@N@- Found files with invalid states:@N@$(cat ${CMSSW_BASE}/upload/invalid_files.txt | sed 's|^\(\s*\)|\1  - |;s|$|@N|' | tr '\n' '@')"
fi

if [ -s ${CMSSW_BASE}/upload/multiple_files_changes.txt ] ; then
    MSG="${MSG}@N@@N@- There are other open Pull requests which might conflict with changes you have proposed:"
    MSG="${MSG}@N@$(cat ${CMSSW_BASE}/upload/multiple_files_changes.txt | grep -v '^ *$'  | sed 's|^\(\s*\)|\1  - |;s|$|@N|' | tr '\n' '@')"
fi

if ! $DRY_RUN ; then
  send_jenkins_artifacts ${CMSSW_BASE}/upload/ pr-code-checks/${REPO_USER}-PR-${PULL_REQUEST}/${BUILD_NUMBER}
  eval `scram unset -sh`
  ${CMS_BOT_DIR}/comment-gh-pr -r ${REPOSITORY} -p $PULL_REQUEST -m "${MSG}${HOW_TO_RUN}"
fi
