#!/bin/bash -ex
THISDIR=$(dirname $0)
source ${THISDIR}/cmsrep.sh
CONFIG_MAP=${THISDIR}/config.map
PROFILING_WORKFLOWS=$($CMS_BOT_DIR/cmssw-pr-test-config _PROFILING | tr ',' ' ')
for x in `grep ADDITIONAL_TESTS=  $CONFIG_MAP | grep "SCRAM_ARCH=$ARCHITECTURE;" | grep "RELEASE_QUEUE=$RELEASE_QUEUE;" | sed -e's/.*ADDITIONAL_TESTS=//;s/;.*//' | tr , '\n'`; do
  #Skip some tests which are run separately e.g. fwlie clang-analyzer (as part of static-cecks)
  [ "${x}" = "fwlite" ] && continue
  [ "${x}" = "clang-analyzer" ] && continue

  pfile="$WORKSPACE/auto-$x-properties"
  echo "Creating property file ${pfile}"
  echo "RELEASE_FORMAT=${RELEASE_FORMAT}" > ${pfile}
  echo "ARCHITECTURE=${ARCHITECTURE}" >> ${pfile}
  echo "RELEASE_QUEUE=${RELEASE_QUEUE}" >> ${pfile}
  if [ "$x" == "baseline-gpu" ]; then
    x="baseline"
    echo "TEST_FLAVOR=gpu" >> ${pfile}
  fi
  echo "ADDITIONAL_TEST_NAME=$x" >> ${pfile}
  if [ "$x" == "baseline" ]; then
    echo "REAL_ARCH=${RELVAL_REAL_ARCH}" >> ${pfile}
  fi
  if [ "$x" = "igprof-pp" -o  "$x" = "igprof-mp"  ] ; then
    prof=$(echo $x | sed 's|igprof-||')
    sed -i -e "s|ADDITIONAL_TEST_NAME=$x|ADDITIONAL_TEST_NAME=igprof|" ${pfile}
    echo "PROFILE=$prof" >> ${pfile}
    wf="136.889"
    nfile=$WORKSPACE/auto-$x-${wf}-properties
    cp ${pfile} ${nfile}
    echo "WORKFLOWS=-i all -l $wf" >> ${nfile}
    echo "EVENTS=100" >> ${nfile}
    for wf in $PROFILING_WORKFLOWS; do
      nfile=$WORKSPACE/auto-$x-${wf}-properties
      [ ! -e ${nfile} ] || continue
      cp ${pfile} ${nfile}
      echo "WORKFLOWS=-l $wf" >> ${nfile}
      echo "EVENTS=10" >> ${nfile}
    done
    rm -f ${pfile}
  fi
  if [ "$x" = "profiling" ] ; then
    for wf in $PROFILING_WORKFLOWS; do
      nfile=$WORKSPACE/auto-$x-${wf}-properties
      cp ${pfile} ${nfile}
      echo "PROFILING_WORKFLOWS=$wf" >> ${nfile}
      echo "EVENTS=100" >> ${nfile}
    done
    rm -f ${pfile}
  fi
done

for test_type in relvals qa ; do
  pfile="$WORKSPACE/auto-gpu-${test_type}-properties"
  if [ -e $pfile ] ; then
    for gpu in $(cat ${THISDIR}/gpu_flavors.txt | grep -v '^\s*$' | grep -v '^#') ; do
      nfile="$WORKSPACE/auto-${test_type}-${gpu}-properties"
      cp ${pfile} ${nfile}
      case $gpu in
        cuda|nvidia_*) echo "IB_TEST_TYPE=${gpu}" >> ${nfile}
        rocm|amd_*)    echo "IB_TEST_TYPE=${gpu}" >> ${nfile}
        * ) echo "ERROR: Unknow GPU type: ${gpu}"; exit 1;;
      esac
      sed -i -e 's|ADDITIONAL_TEST_NAME=gpu-relvals|ADDITIONAL_TEST_NAME=relvals|' ${nfile}
    done
    rm -f ${pfile}
  fi
done

if [ "${PRODUCTION_ARCH}" = "1" ] ; then
  if [ $(grep "SCRAM_ARCH=${ARCHITECTURE};" $CONFIG_MAP | grep 'RELEASE_BRANCH=master;' | grep "RELEASE_QUEUE=${RELEASE_QUEUE};" | grep 'PROD_ARCH=1;' | grep -v 'DISABLED=1' | wc -l) -eq 1 ] ; then
    echo "RELEASE_FORMAT=${RELEASE_FORMAT}" > cmssw-afs-eos.txt
    echo "ARCHITECTURE=${ARCHITECTURE}" >> cmssw-afs-eos.txt
    for btype in local afs eos ; do
      cp cmssw-afs-eos.txt cmssw-afs-eos.${btype}
      echo "BUILD_TYPE=${btype}" >> cmssw-afs-eos.${btype}
    done
    rm -f cmssw-afs-eos.txt
  fi
fi
