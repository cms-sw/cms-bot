#!/bin/sh -ex

if [ X$DRY_RUN = Xtrue ]; then
  ECHO=echo
fi

cd $WORKSPACE

if [ ! -d cmssw ]; then
  git init cmssw
  cd cmssw
  git remote add origin git@github.com:cms-sw/cmssw
else
  cd cmssw
fi

# Get the list of queues. Notice we need to use the date in the matching to
# avoid CMSSW_6_2_X matching CMSSW_6_2_X_SLHC
QUEUES=`git ls-remote --tags origin "CMSSW_*X*" | grep refs/tags | sed -e 's|.*refs/tags/||;s|_2[0-1][0-9][0-9]-[0-1][0-9].*||' | sort -u`

for QUEUE in $QUEUES; do
  # List the tags we are going to delete. This will stay in the
  # logs and therefore we can always get them back.
  git ls-remote --tags origin "${QUEUE}_2*" \
      | head -n -60 | head -n 50

  # Keep 60 tags per QUEUE.
  git ls-remote --tags origin "${QUEUE}_2*" \
      | sed -e "s/.*$QUEUE/:$QUEUE/" \
      | head -n -60 \
      | xargs -r -n 50 $ECHO git push origin 
done

cd $WORKSPACE

if [ ! -d cmsdist ]; then
  git init cmsdist
  cd cmsdist
  git remote add origin git@github.com:cms-sw/cmsdist
else
  cd cmsdist
fi

CMSDIST_QUEUES=`git ls-remote --tags origin "*/CMSSW_*X*" | grep refs/tags | grep "\(IB\|ALL|DEF\)" | sed -e 's|.*refs/tags/||;s|20[0-9][0-9]-[0-9][0-9]-[0-9][0-9]-[0-9][0-9][0-9][0-9]|2*|' | sort -u`

for QUEUE in $CMSDIST_QUEUES; do
  # List the tags we are going to delete. This will stay in the
  # logs and therefore we can always get them back.
  git ls-remote --tags origin "$QUEUE" \
      | head -n -40 | head -n 50

  # Keep 60 tags per QUEUE.
  git ls-remote --tags origin "$QUEUE" \
      | sed -e "s|.*refs/tags/|:|" \
      | head -n -40 \
      | xargs -r -n 50 $ECHO git push origin 
done
